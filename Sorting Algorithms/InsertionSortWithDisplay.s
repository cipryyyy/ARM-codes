@devices and constants
.equ EndDisp, 0xff200020		@Lights when ends	
.equ CountDisp, 0xff200030		@Show current index

@Numbers led values
.equ zero, 0b00111111
.equ one, 0b00000110
.equ two, 0b01011011
.equ three, 0b01001111
.equ four, 0b01100110
.equ five, 0b01101101
.equ six, 0b01111101
.equ seven, 0b00000111
.equ eight, 0b01111111
.equ nine, 0b01101111
.equ hexa, 0b01110111
.equ hexb, 0b01111100
.equ hexc, 0b00111001
.equ hexd, 0b01011110
.equ hexe, 0b01111001
.equ hexf, 0b01110001

.data
	numbers: .word zero, one, two, three, four, five, six, seven, eight, nine, hexa, hexb, hexc, hexd, hexe, hexf
	V: .word -1, 0, 1, -173768, 946085, 592561, 491790, -361319, -360453, 635561, -320113, -415926, 714214, 141433, -103796, -233540, 667834, 825422, 676274, 700344, 458816, 238570, 292327, -139858, 50565, -209213, -350572, -35499, 559130, 150385, 182590, -63219, 360148, 576613, 929145, -58829, -297545, 450178, 112103, 370966, -452497, -300228, -452875, -442131, 398773, 213100, 259278, -11113, 300215, 696604, 639311, -140654, 671922, -134843, 838946, 132532, -337483, 291911, 349559, 950715, 87873, -82742, 497031, 672931, 556241, 173156, -58964, -224813, 973073, 909288, -308672, -287712, -366842, -322451, 189124, 187491, 651342, -404060, 758360, 258633, 204719, 286209, 30749, 596407, 425252, 554082, 237537, 413205, 303038, 116334, 961625, 216833, 647435, 58408, -134599, 113221, 323633, -457589, -267726, -103440, 416419, -54991, 403701, -353679, 970653, -425174, 51897, 132741, -261184, 404959, 290323, 386895, 258925, 594706, 298466, 909764, 749137, 929714, -31749, 217405, 505628, 805017, 690820, 751747, 564249, 103453, -64991, -346016, -371219, -386974, -416226, 185961, 188081, 209775, 942078, 747116, 40548, 862025, 293961, 528994, 555811, 744755, 583059, -300657, 797277, -1011, -4371, 18961, 184150, 419039, -338902, 37956, 577500, -77987, 525072, -308005, 976969, 463639, 151911, 548747, 94989, 32193, 157159, -165881, -352883, 621768, -224817, 718795, -29418, 71091, 791716, -256741, -69628, 420855, -382387, -320695, 124621, -420052, -260475, 392387, 265774, -294616, 726422, -379761, -12108, -103685, 949007, -141673, 905720, -329110, -258534, -185636, -330680, -73557, 563635, 964810, 439303, 708637, 881208, -1666, -1530, 838124, 738746, 955819, 815209, 292721, -373628, 564957, 43235, 164561, 853247, 457804, 335232, 327002, -328737, 515832, 524811, 264737, 26792, 534368, 794804, -288106, -405321, -302519, -182586, 841444, 505012, -102686, 147370, -388888, 630310, -320950, 631596, 527293, 799267, 431216, -425068, 670025, 655478, 926842, 135937, -49066, 876479, 752218, 739719, 351202, 381165, 21742, -7699, -352743, -5357, -350970, 968901, -346435, -366533, 99327, 377403, -249135, 805555, 875122, -323410, 613549, 553777, 587549, -62020, 144316, 775455, 493995, -254233, 484279, 898566, -250100, 817533, 324727, 452617, -355002, 907417, 691131, -150723, 379, -41109, -92960, 885154, -50002, -13183, 495658, 757474, -428451, 357835, -419940, 141625, 605982, 281251, 283460, 215271, -53401, -285062, 276621, 515080, -244643, 315027, 127980, 472127, 942523, -54024, 265252, 754005, 135767, 230902, 144745, 168985, 242314, 616560, 385119, 556036, -395011, 788844, 562467, 144548, -320810, 713026, 459218, 757743, -22559, 866603, 461609, -355185, 257903, -110071, 942158, 607777, 166001, 382658, 664453, 17284, 944578, -10186, -75332, 864674, 464534, 563733, -152564, 581361, 903156, 502718, 492985, -91570, 393809, 662291, 150138, 595495, -23208, -326149, 372561, -423474, -318400, 969846, -89424, 510929, 145374, -72651, 887934, 43064, 446222, 885902, -212530, 338032, 763413, 585998, 868876, 449449, 228904, 896888, 614234, 683628, 227068, 163889, 547621, 509424, 717826, 172669, -279938, 143239, 593112, -304090, -81000, -241424, -250541, 471521, 566752, 731291, -452691, -275044, 743196, 877468, 590346, -86043, 938315, 684937, 544385, -349420, 313675, -448479, 482841, 635813, -275225, 751632, 416858, 193244, 723301, 150757, 619379, 766261, 781812, -111176, 534523, 661935, 354386, -289056, 397077, -292230, -280770, -339589, -132777, 380576, 165229, 696772, 183995, 361953, 2139, 470865, 544579, -295130, 109022, -292165, 905994, 463557, -125229, 72593, 597945, 448451, 623336, 444685, 630111, 952022, 889699, 546588, -277314, 41769, 936984, 318481, -431753, -103172, -7493, 760543, 800415, 943994, 643773, 139606, -368368, 804458, 917598, 325352, 138700, 117438, -108228, 285465, 396053, -93447, 408962, 590749, -429374, 547233, 498663, 213413, 342800, 307912, 930096, 285697, -407443, 543714, -407858, -220306, 540992, -181370, 888406, 884449, -223061, 82844, 284688, 275359, 324708, 322856, 568477, 879, -82116, 212696, 655276, 282388, 853467, -400404, -367698, -219308, -213539, -218557, 792866, -401065, 358620, 744834, -126090, 139164, 221096, 698784, -157110, 963038, -207069, 668617, 351500, 898626, 333218, -301762, -262255, 328201, 858882, 615248, 764413, 446602, -334952, -432802, 188138, -256472, -268115, 353668, -211255, -48103, -237542, -245298, 383580, -314537, -288687, -71921, 779663, 921053, -408538, -186318, 905244, 316825, 612154, 322885, -364361, -294975, -172890, 599673, -397264, 590129, 338945, -171500, 37682, 951600, 663281, -66176, 503293, -105448, 485856, -376061, -364918, 773323, 119786, 30402, 277978, 941663, 909793, 263071, 845327, 96832, 403685, 282102, 617431, -310988, 203302, -313910, 51485, 77839, -439025, 100046, 241911, 549396, -71225, -374772, -182655, 819985, -254735, 292993, 247522, -430168, -319742, -158450, 478529, 516101, 45727, 233069, 310329, -75306, 582750, 114354, -386246, 215401, -237561, 223228, 401093, 181360, 287677, 63423, -257033, -412466, -221108, 921661, 788711, 140618, -115658, -419587, 95329, -294815, 767774, 49678, 737366, -391306, -307498, 52043, -269725, -215975, 339449, 527800, -369060, 829551, 591455, -429800, 900594, 242659, 689313, 455226, 676910, 763571, -324696, -80195, 323088, -137629, 560699, 45659, 558840, -408646, 520780, 383903, 447542, 931195, 316933, 821402, 127270, 166531, 362702, -62949, 669864, 440147, 36892, 319571, 101105, -415240, 449644, 789702, 126128, 736174, -135288, -391485, -8576, -171080, 603271, -4012, 418570, -441732, -250664, -46777, -306502, 692408, -62486, 561806, 967623, 914664, 921506, 256385, -455586, -403745, 316689, -425652, -292498, 356613, -400077, 714737, 228908, 422296, -93877, 485898, 252613, 624044, -127357, 274315, 567121, -212842, 145350, -376323, 160889, 14537, -380509, -3350, 75100, 679978, -382501, 453508, -53464, 581093, 47296, 5639, -399754, -48329, 68623, 671403, -41716, -280285, -335300, -335989, -425791, -60571, -440183, 271213, 472210, 331466, 195796, 259973, 966929, 523999, 655467, 239153, 73252, -387153, 677030, 226907, -217340, -441195, 133264, -254757, 537312, 664015, -47177, 676252, -42326, -283216, -151138, 856598, -267995, 735961, 908456, 754647, -183109, 153619, 888382, 166355, -316668, -183675, 961436, -120412, 913916, 424074, 538845, 394269, 953551, -329462, -390328, 301341, -182515, 698207, 924876, 404590, -202190, 236018, 131626, -242599, 597412, 925564, -121866, 582045, -118905, 822347, 17644, -298287, 584210, 176686, -336499, 344361, 9622, -170634, -176306, 389839, -23906, 346923, -142530, 224811, 328062, 464201, 975715, -171285, -218783, 31108, 263663, 962806, 181968, 216040, 806189, 411069, 647324, 683366, 66260, 777388, -440115, 326949, 225919, -365310, -332004, 41631, -328868, 751539, -276045, -456778, 813617, -294972, -395379, 101497, -453019, 505980, -449726, 414350, -51644, 351058, 739033, -389323, -422559, 337402, 515580, 781785, 593061, -423700, 429717, -185571, -353082, 170122, 678023, -81964, -3359, -267509, -364942, 845861, 800864, 641454, 645820, 276131, 825439, -216618, -84309, 416782, 882318, -454014, 205397, 361057, 436204, 188873, -318307, 501264, -325373, 102762, 609957, 572290, -5885, 124359, 970919, 253131, 923198, 239964, 759931, 315162, 156597, 233863, 363564, 891027, 965235, -383507, 209832, 439702, 293160, 758046, 566887, -273511, 571818, 536609, -120760, 979727, 478287, 491400, 910551, -169997, -157886, 926803, -436211, -142132, -416894, -274077, 832843, -174099, -196424, -383299, -75234, 617929, -201781, 626353, 968617, -37774, 50183, 600275, -181270, 63452, 78082, 11497, 658641, -368978, 66774, 816283, 190363, -288890, 114861, -180869, 812611, 357077, 183951, -324033, -230252, -237636, 879157, 708926, 251023, 535642, 178610, 28104, 234844, 497584, -1834, 972960, -428495, 36094, 252919, 787721, -160118, 649444, 199142, 325262, -153542, 660659, -133680, -31118, 554443, 444559, 848380, -262203, 675751, -258051, 281020, -236740, -425093, -338095, -131992, -39999, -79007, -133262, 897593, 136166, 312458, 39643, 327495, 219754, 231257, -119154, 218472, 722031, 296208, 113474, 928339, 249835, -325510, 595108, 581421, 983198, 217943, -422533, 355924, 357463, 256721, 872778
	EOA: .byte 1		@End Of Array
	.align

.text
	.global insertionWithDisplay
insertionWithDisplay:
	mov r0, #0
	ldr r1, =EndDisp
	str r0, [r1]
	ldr r0, =V		@Load the array
	ldr r1, =EOA	@Calculate the length
	sub r1, r1, r0
	lsr r1, #2
	mov r2, #1		@Insertion starts from the second element
	mov r12, #0
	
_loop1:
	bl _shortDisp
	ldr r3, [r0, r2, lsl #2]		@Load the i-th element
	mov r4, r2						@Copy the value (to check the previous elements)

_loop2:
	sub r4, r4, #1				@Subtract one
	ldr r5, [r0, r4, lsl #2]	@Load the element
	cmp r3, r5					@Check if last loaded element is smaller	
	add r6, r4, #1					@If yes, swap them in RAM
	strlt r5, [r0, r6, lsl #2]
	strlt r3, [r0, r4, lsl #2]
	cmp r4, #0					@Check if I reached the beginning of the array
	bne _loop2					@If not, repeat with the previous element
	add r2, #1					@If yes, proceed to sort the next element
	cmp r2, r1					@Check if I've completed the sorting
	bne _loop1				@If not, I proceed to sort
	bl _doneDisp			@Print it's Done
	b _end				@Jump to the end
	
_shortDisp:
	push {r0-r9}		@Save register
	ldr r0, =CountDisp 	@Load the display
	ldr r1, =numbers		@Number array
	mov r4, #0			@Index
	mov r5, #0			@Storage
	mov r9, #0			@Shifter
	
_sDloop:
	mov r3, #0xf		@mask
	lsl r3, r4			@Adjust the mask
	and r6, r2, r3		@Extract signle digit
	lsr r8, r6, r4				@Fix position
	ldr r7, [r1, r8, lsl #2]		@Load the binary
	lsl r7, r9					@Shift	
	add r5, r7					@Add to storage
	cmp r4, #12					@Check if end reached
	add r4, #4
	add r9, #8
	blo _sDloop			@Not ended
	str r5, [r0]			@Display
	pop {r0-r9}				@Reset register
	mov pc, lr				@End
	
_doneDisp:
	ldr r0, =EndDisp
	ldr r1, =#0b011110010101010001011110	@'Sort'
	str r1, [r0]		@Print
	bl _shortDisp
	mov pc, lr
